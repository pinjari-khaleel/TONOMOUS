<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 |  Copyright 2015 Adobe Systems Incorporated
 |
 |  Licensed under the Apache License, Version 2.0 (the "License");
 |  you may not use this file except in compliance with the License.
 |  You may obtain a copy of the License at
 |
 |      http://www.apache.org/licenses/LICENSE-2.0
 |
 |  Unless required by applicable law or agreed to in writing, software
 |  distributed under the License is distributed on an "AS IS" BASIS,
 |  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 |  See the License for the specific language governing permissions and
 |  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.tonomus</groupId>
  <artifactId>tonomus</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <name>Tonomus Site</name>
  <description>Tonomus Site</description>
  <modules>
    <module>all</module>
    <module>core</module>
    <module>ui.frontend</module>
    <module>ui.apps</module>
    <module>ui.apps.structure</module>
    <module>ui.config</module>
    <module>ui.content</module>
    <module>analyse</module>
  </modules>
  <properties>
    <aem.host>localhost</aem.host>
    <aem.port>4502</aem.port>
    <aem.publish.host>localhost</aem.publish.host>
    <aem.publish.port>4503</aem.publish.port>
    <sling.user>admin</sling.user>
    <sling.password>admin</sling.password>
    <vault.user>admin</vault.user>
    <vault.password>admin</vault.password>
    <bnd.version>5.1.2</bnd.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <aem.sdk.api>2023.2.11289.20230224T170559Z-230100</aem.sdk.api>
    <core.wcm.components.version>2.22.0</core.wcm.components.version>
    <aemanalyser.version>1.5.8</aemanalyser.version>
    <componentGroupName>Tonomus</componentGroupName>
    <wcm.io.caconfig.version>1.15.2</wcm.io.caconfig.version>
    <io.wcm.caconfig.extensions.version>1.9.0</io.wcm.caconfig.extensions.version>
    <io.wcm.testing.wcm-io-mock.caconfig.version>1.2.0</io.wcm.testing.wcm-io-mock.caconfig.version>
    <org.apache.sling.testing.caconfig.mock.plugin.version>1.4.0</org.apache.sling.testing.caconfig.mock.plugin.version>
    <filevault.package.maven.plugin.version>1.3.2</filevault.package.maven.plugin.version>
    <vault.validation.version>3.6.8</vault.validation.version>
    <sling.maven.plugin.version>3.0.2</sling.maven.plugin.version>
    <sonar.maven.plugin.version>3.9.1.2184</sonar.maven.plugin.version>
    <content.package.maven.plugin.version>1.0.4</content.package.maven.plugin.version>
    <aem.nodetypes.version>2022.10.0</aem.nodetypes.version>
    <org.apache.sling.scripting.sightly.runtime.version>1.2.6-1.4.0</org.apache.sling.scripting.sightly.runtime.version>
    <org.apache.sling.models.impl.version>1.5.4</org.apache.sling.models.impl.version>
  </properties>
  <build>
    <plugins>
      <!-- Maven Release Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <scmCommentPrefix>[maven-scm] :</scmCommentPrefix>
          <preparationGoals>clean install</preparationGoals>
          <goals>install</goals>
          <releaseProfiles>release</releaseProfiles>
        </configuration>
      </plugin>
      <!-- Maven Source Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.0.1</version>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar.maven.plugin.version}</version>
      </plugin>
      <!-- Maven Enforcer Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.3.9,)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <message>Maven must be executed with a Java 8 JRE or higher.</message>
                  <version>1.8.0</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Maven Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
        <version>1.18.18.0</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>delombok</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <tarLongFileMode>posix</tarLongFileMode>
          </configuration>
        </plugin>

        <!-- Maven Jar Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <!-- Maven Clean Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- BND Maven Plugin -->
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <executions>
            <execution>
              <id>bnd-process</id>
              <goals>
                <goal>bnd-process</goal>
              </goals>
              <configuration>
                <bnd>
                  <![CDATA[
Bundle-Category: ${componentGroupName}
# export all versioned packages except for conditional ones (https://github.com/bndtools/bnd/issues/3721#issuecomment-579026778)
-exportcontents: ${removeall;${packages;VERSIONED};${packages;CONDITIONAL}}
# reproducible builds (https://github.com/bndtools/bnd/issues/3521)
-noextraheaders: true
-snapshot: SNAPSHOT
Bundle-DocURL:
-plugin org.apache.sling.caconfig.bndplugin.ConfigurationClassScannerPlugin
-plugin org.apache.sling.bnd.models.ModelsScannerPlugin
                                ]]>
                </bnd>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.apache.sling</groupId>
              <artifactId>org.apache.sling.caconfig.bnd-plugin</artifactId>
              <version>1.0.2</version>
            </dependency>
            <dependency>
              <groupId>org.apache.sling</groupId>
              <artifactId>org.apache.sling.bnd.models</artifactId>
              <version>1.0.0</version>
            </dependency>
            <dependency>
              <groupId>org.apache.sling</groupId>
              <artifactId>scriptingbundle-maven-plugin</artifactId>
              <version>0.5.0</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-baseline-maven-plugin</artifactId>
          <version>${bnd.version}</version>
        </plugin>
        <!-- Maven Resources Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <!-- Maven Compiler Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <!-- Maven Installer Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <!-- Maven Surefire Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
          <configuration>
            <useSystemClassLoader>false</useSystemClassLoader>
          </configuration>
        </plugin>
        <!-- Maven Failsafe Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <!-- Maven Deploy Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- Apache Sling Plugin -->
        <plugin>
          <groupId>org.apache.sling</groupId>
          <artifactId>sling-maven-plugin</artifactId>
          <version>${sling.maven.plugin.version}</version>
          <configuration>
            <slingUrl>http://${aem.host}:${aem.port}/system/console</slingUrl>
            <deploymentMethod>WebConsole</deploymentMethod>
          </configuration>
        </plugin>
        <!-- HTL Maven Plugin -->
        <plugin>
          <groupId>org.apache.sling</groupId>
          <artifactId>htl-maven-plugin</artifactId>
          <version>2.0.2-1.4.0</version>
          <configuration>
            <failOnWarnings>true</failOnWarnings>
          </configuration>
        </plugin>
        <!-- Jackrabbit FileVault Package Plugin -->
        <plugin>
          <groupId>org.apache.jackrabbit</groupId>
          <artifactId>filevault-package-maven-plugin</artifactId>
          <extensions>true</extensions>
          <version>${filevault.package.maven.plugin.version}</version>
          <configuration>
            <filterSource>src/main/content/META-INF/vault/filter.xml</filterSource>
            <allowIndexDefinitions>true</allowIndexDefinitions>
            <validatorsSettings>
              <jackrabbit-packagetype>
                <options>
                  <immutableRootNodeNames>apps,libs,oak:index</immutableRootNodeNames>
                </options>
              </jackrabbit-packagetype>
              <jackrabbit-nodetypes>
                <options>
                  <!-- use the nodetypes and namespaces from the aem-nodetypes.jar provided in the plugin dependencies -->
                  <cnds>tccl:aem.cnd</cnds>
                </options>
              </jackrabbit-nodetypes>
            </validatorsSettings>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>biz.netcentric.aem</groupId>
              <artifactId>aem-nodetypes</artifactId>
              <version>${aem.nodetypes.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.jackrabbit.vault</groupId>
              <artifactId>vault-validation</artifactId>
              <version>${vault.validation.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <!-- AEM Analyser Plugin -->
        <plugin>
          <groupId>com.adobe.aem</groupId>
          <artifactId>aemanalyser-maven-plugin</artifactId>
          <version>${aemanalyser.version}</version>
          <extensions>true</extensions>
        </plugin>
        <!-- Content Package Plugin -->
        <plugin>
          <groupId>com.day.jcr.vault</groupId>
          <artifactId>content-package-maven-plugin</artifactId>
          <version>${content.package.maven.plugin.version}</version>
          <configuration>
            <targetURL>http://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
            <failOnError>true</failOnError>
            <userId>${vault.user}</userId>
            <password>${vault.password}</password>
          </configuration>
        </plugin>
        <!-- Maven Enforcer Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- Maven Dependency Plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- Build Helper Maven Plugin -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse
            m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-dependency-plugin
                    </artifactId>
                    <versionRange>
                      [2.2,)
                    </versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.codehaus.mojo
                    </groupId>
                    <artifactId>
                      build-helper-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.5,)
                    </versionRange>
                    <goals>
                      <goal>
                        reserve-network-port
                      </goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <!-- Development profile: install only the bundle -->
    <profile>
      <id>autoInstallBundle</id>
      <!--
                To enable this feature for a bundle, the sling-maven-plugin
                (without configuration) needs to be included:
                <plugin>
                    <groupId>org.apache.sling</groupId>
                    <artifactId>sling-maven-plugin</artifactId>
                 </plugin>
            -->
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.sling</groupId>
              <artifactId>sling-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>install-bundle</id>
                  <goals>
                    <goal>install</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>autoInstallPackage</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.jackrabbit</groupId>
              <artifactId>filevault-package-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>create-package</id>
                  <goals>
                    <goal>package</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.day.jcr.vault</groupId>
              <artifactId>content-package-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>install-package</id>
                  <goals>
                    <goal>install</goal>
                  </goals>
                  <configuration>
                    <targetURL>http://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>autoInstallPackagePublish</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.jackrabbit</groupId>
              <artifactId>filevault-package-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>create-package</id>
                  <goals>
                    <goal>package</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.day.jcr.vault</groupId>
              <artifactId>content-package-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>install-package-publish</id>
                  <goals>
                    <goal>install</goal>
                  </goals>
                  <configuration>
                    <targetURL>
                      http://${aem.publish.host}:${aem.publish.port}/crx/packmgr/service.jsp
                    </targetURL>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
  <!-- ====================================================================== -->
  <!-- D E P E N D E N C I E S -->
  <!-- ====================================================================== -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.adobe.aem</groupId>
        <artifactId>aem-sdk-api</artifactId>
        <version>${aem.sdk.api}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.adobe.cq</groupId>
        <artifactId>core.wcm.components.core</artifactId>
        <version>${core.wcm.components.version}</version>
      </dependency>
      <!-- Testing -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.8.2</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>4.1.0</version>
        <exclusions>
          <exclusion>
            <artifactId>mockito-core</artifactId>
            <groupId>org.mockito</groupId>
          </exclusion>
        </exclusions>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>4.1.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit-addons</groupId>
        <artifactId>junit-addons</artifactId>
        <version>1.4</version>
        <scope>test</scope>
      </dependency>

      <!-- Lombok -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.24</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>io.wcm</groupId>
        <artifactId>io.wcm.testing.aem-mock.junit5</artifactId>
        <version>4.1.8</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.sling</groupId>
        <artifactId>org.apache.sling.testing.caconfig-mock-plugin</artifactId>
        <version>${org.apache.sling.testing.caconfig.mock.plugin.version}</version>
      </dependency>
      <dependency>
        <groupId>com.adobe.cq</groupId>
        <artifactId>core.wcm.components.testing.aem-mock-plugin</artifactId>
        <version>${core.wcm.components.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>uk.org.lidalia</groupId>
        <artifactId>slf4j-test</artifactId>
        <version>1.0.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>pl.pojo</groupId>
        <artifactId>pojo-tester</artifactId>
        <version>0.7.6</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.wcm</groupId>
        <artifactId>io.wcm.testing.wcm-io-mock.caconfig</artifactId>
        <version>${io.wcm.testing.wcm-io-mock.caconfig.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/xerces/xercesImpl -->
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>2.12.2</version>
        <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.8.9</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
